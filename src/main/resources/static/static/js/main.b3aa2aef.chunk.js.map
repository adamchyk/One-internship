{"version":3,"sources":["components/use-auth.js","components/SignIn.js","components/SignUp.js","components/NotFound.js","components/EditNoteModal.js","components/Dashboard.js","components/PrivateRoute.js","components/AdminPage.js","App.js","reportWebVitals.js","index.js"],"names":["authContext","createContext","ProvideAuth","children","auth","useState","user","setUser","login","username","password","axios","post","then","response","data","signup","logout","catch","isAuthenticated","useEffect","get","useProvideAuth","Provider","value","useAuth","useContext","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","setUsername","setPassword","error","setError","history","useHistory","replace","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","color","noValidate","onSubmit","e","preventDefault","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onInput","target","type","Button","Grid","container","justifyContent","item","to","Copyright","align","href","Date","getFullYear","SignUp","xs","FormControlLabel","control","Checkbox","Box","mt","NotFound","filter","createFilterOptions","EditNoteModal","note","open","handleClose","categories","React","setNoteId","text","noteText","setNoteText","category","setValue","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","Autocomplete","onChange","event","newValue","inputValue","filterOptions","options","params","filtered","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","option","renderOption","style","freeSolo","renderInput","multiline","maxRows","DialogActions","onClick","root","flexGrow","demo","background","menuButton","marginRight","title","rootForFilters","formControl","Dashboard","categoryValue","setCategoryValue","notes","setNotes","setCategories","a","result","deleteOpen","setDeleteOpen","editOpen","setEditOpen","categoryId","editNote","setEditNote","handleDeleteBtn","handleDeleteClose","handleEditBtn","fixed","AppBar","position","Toolbar","Link","md","length","List","dense","map","ListItem","ListItemAvatar","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","FormControl","FormLabel","RadioGroup","newVal","parseInt","Radio","handleSave","PrivateRoute","rest","render","location","pathname","state","from","table","minWidth","createData","email","admin","action","rows","AdminPage","changePassOpen","setChangePassOpen","changeDeactivateOpen","setDeactivateOpen","handleChangePassBtn","handleChangePassClose","handleDeactivateBtn","handleDeactivateClose","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","row","scope","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3aa2aef.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react'\nimport axios from 'axios'\n\n/** For more details on\n * `authContext`, `ProvideAuth`, `useAuth` and `useProvideAuth`\n * refer to: https://usehooks.com/useAuth/\n */\nconst authContext = createContext()\n\n// Provider component that wraps your app and makes auth object ...\n// ... available to any child component that calls useAuth().\nexport function ProvideAuth ({ children }) {\n  const auth = useProvideAuth()\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>\n}\n\n// Hook for child components to get the auth object ...\n// ... and re-render when it changes.\nexport const useAuth = () => {\n  return useContext(authContext)\n}\n\n// Provider hook that creates auth object and handles state\nfunction useProvideAuth () {\n  const [user, setUser] = useState(null)\n\n  // Wrap any Firebase methods we want to use making sure ...\n  // ... to save the user to state.\n  const login = (username, password) => {\n    return axios.post('/api/login', { username, password })\n      .then((response) => {\n        const user = response.data\n        setUser(user)\n        return user\n      })\n  }\n\n  const signup = (username, password) => {\n    return axios.post('/api/signup', { username, password })\n      .then((response) => {\n        const user = response.data\n        setUser(user)\n        return user\n      })\n  }\n\n  const logout = () => {\n    return axios.post('/api/logout')\n      .then((response) => {\n        setUser(false)\n        return user\n      })\n      .catch(() => {\n        setUser(false)\n      })\n  }\n\n  const isAuthenticated = () => {\n    return !!user\n  }\n\n  // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n  useEffect(() => {\n    return axios.get('/api/me')\n      .then((response) => {\n        const user = response.data\n        setUser(user)\n      })\n      .catch(() => {\n        setUser(false)\n      })\n    // Cleanup subscription on unmount\n    // return () => unsubscribe()\n\n  }, [])\n\n  // Return the user object and auth methods\n  return {\n    user,\n    isAuthenticated,\n    login,\n    signup,\n    logout\n  }\n}","import React, { useState } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useAuth } from './use-auth'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default function SignIn () {\n  const classes = useStyles()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState('')\n  const history = useHistory()\n  const auth = useAuth()\n\n  if (auth.isAuthenticated()) {\n    history.replace('/dashboard')\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (username === '' || password === '') {\n      setError('Enter username and password.')\n      return\n    }\n\n    auth.login(username, password)\n      .then(() => {\n        history.replace('/dashboard')\n      })\n      .catch(() => {\n        setError('Invalid username and/or password.')\n      })\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline/>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon/>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Typography color=\"error\">\n          {error}\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            value={username}\n            error={error}\n            onInput={(e) => setUsername(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            error={error}\n            onInput={(e) => setPassword(e.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/signup\">\n                Don't have an account? Sign Up\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n\n    </Container>\n  )\n}","import React, { useState } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useAuth } from './use-auth'\n\nfunction Copyright () {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default function SignUp () {\n  const classes = useStyles()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState('')\n  const history = useHistory()\n  const auth = useAuth()\n\n  if (auth.isAuthenticated()) {\n    history.replace('/dashboard')\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (username === '' || password === '') {\n      setError('Enter username and password.')\n      return\n    }\n\n    auth.signup(username, password)\n      .then(() => {\n        history.replace('/login')\n      })\n      .catch(() => {\n        setError('Invalid username and/or password.')\n      })\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline/>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon/>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"name\"\n                name=\"username\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                autoFocus\n                value={username}\n                error={error}\n                onInput={(e) => setUsername(e.target.value)}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                error={error}\n                onInput={(e) => setPassword(e.target.value)}\n              />\n\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\"/>}\n                label=\"I want to receive notification via email.\"\n              />\n            </Grid>\n          </Grid>\n\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright/>\n      </Box>\n    </Container>\n  )\n}","import React from 'react';\n\nfunction NotFound() {\n    return (\n        <h1>Not Found</h1>\n    );\n}\n\nexport default NotFound;","import React from 'react';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, {createFilterOptions} from '@material-ui/lab/Autocomplete';\n\nconst filter = createFilterOptions();\n\nfunction EditNoteModal({note, open, handleClose, categories}) {\n\n    const [noteId, setNoteId] = React.useState(note.id);\n    const [noteText, setNoteText] = React.useState(note.text);\n    const [value, setValue] = React.useState(note.category);\n\n    React.useEffect(() => {\n        setNoteId(note.id);\n        setNoteText(note.text);\n        setValue(note.category);\n    }, [note]);\n\n    const handleEditClose = () => {\n        handleClose();\n    }\n\n    const handleSave = () => {\n        // save\n        handleClose();\n    }\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <DialogTitle id=\"form-dialog-title\">Create/Update Note</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Enter note text below:\n                </DialogContentText>\n                <Autocomplete\n                    value={value}\n                    onChange={(event, newValue) => {\n                        if (typeof newValue === 'string') {\n                            setValue({\n                                name: newValue,\n                            });\n                        } else if (newValue && newValue.inputValue) {\n                            // Create a new value from the user input\n                            setValue({\n                                name: newValue.inputValue,\n                            });\n                        } else {\n                            setValue(newValue);\n                        }\n                    }}\n                    filterOptions={(options, params) => {\n                        const filtered = filter(options, params);\n\n                        // Suggest the creation of a new value\n                        if (params.inputValue !== '') {\n                            filtered.push({\n                                inputValue: params.inputValue,\n                                name: `Add \"${params.inputValue}\"`,\n                            });\n                        }\n\n                        return filtered;\n                    }}\n                    selectOnFocus\n                    clearOnBlur\n                    handleHomeEndKeys\n                    id=\"free-solo-with-text-demo\"\n                    options={categories}\n                    getOptionLabel={(option) => {\n                        // Value selected with enter, right from the input\n                        if (typeof option === 'string') {\n                            return option;\n                        }\n                        // Add \"xxx\" option created dynamically\n                        if (option.inputValue) {\n                            return option.inputValue;\n                        }\n                        // Regular option\n                        return option.name;\n                    }}\n                    renderOption={(option) => option.name}\n                    style={{width: 300}}\n                    freeSolo\n                    renderInput={(params) => (\n                        <TextField {...params} label=\"Free solo with text demo\" variant=\"outlined\"/>\n                    )}\n                />\n                <br/>\n                <TextField\n                    id=\"text\"\n                    label=\"Note text\"\n                    type=\"text\"\n                    variant=\"outlined\"\n                    fullWidth\n                    multiline\n                    maxRows={4}\n                    value={noteText}\n                    onChange={e => setNoteText(e.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleEditClose} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={handleSave} color=\"primary\">\n                    Add/Update\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default EditNoteModal;","import React, { useEffect } from 'react'\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport {Link} from 'react-router-dom';\nimport {TextField} from \"@material-ui/core\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditNoteModal from \"./EditNoteModal\";\nimport { useAuth } from './use-auth'\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    rootForFilters: {\n        display: 'flex',\n    },\n    formControl: {\n        margin: theme.spacing(3)\n    },\n}));\n\nfunction Dashboard() {\n    const classes = useStyles();\n    const [secondary, setSecondary] = React.useState(false);\n    const [categoryValue, setCategoryValue] = React.useState('');\n    const [notes, setNotes] = React.useState([]);\n    const [categories, setCategories] = React.useState([]);\n    const auth = useAuth();\n\n    useEffect(async () => {\n        const result = await axios.get('/api/notes');\n        setNotes(result.data);\n    }, []);\n\n    useEffect(async () => {\n        const result = await axios.get('/api/categories');\n        setCategories(result.data);\n    }, []);\n\n    // modal\n    const [deleteOpen, setDeleteOpen] = React.useState(false);\n    const [editOpen, setEditOpen] = React.useState(false);\n    const [editNote, setEditNote] = React.useState({id: null, categoryId: null, text: ''});\n\n\n    const handleChange = (event) => {\n        let newVal = event.target.value;\n        if (!newVal) setCategoryValue(\"\");\n        else setCategoryValue(parseInt(newVal));\n    };\n\n    const handleDeleteBtn = () => setDeleteOpen(true);\n    const handleDeleteClose = () => setDeleteOpen(false);\n    const handleEditBtn = (note) => {\n        setEditNote(note);\n        setEditOpen(true);\n        setEditOpen(true);\n    }\n    const handleEditClose = () => setEditOpen(false);\n    const handleEditSave = () => setEditOpen(false);\n\n    return (\n        <Container fixed>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Dashboard\n                    </Typography>\n                    <Button color=\"inherit\" onClick={auth.logout}>\n                        Logout\n                    </Button>\n                    <Button color=\"inherit\" component={Link} to={'/admin'}>\n                        ADMIN\n                    </Button>\n                </Toolbar>\n            </AppBar>\n\n            <Grid container spacing={4}>\n                <Grid item xs={6} md={8}>\n\n                    <Typography variant=\"h6\" className={classes.title} style={ {marginTop: '20px'}}>\n                        My Notes:\n                    </Typography>\n\n                    <Grid container>\n                        <form className={classes.root} noValidate autoComplete=\"off\">\n                            <TextField id=\"outlined-basic\" label=\"Note search\" variant=\"outlined\"/>\n                        </form>\n\n                        <Button variant=\"contained\" color=\"secondary\"\n                                onClick={handleEditBtn}>\n                            Add a new note\n                        </Button>\n                    </Grid>\n\n                    <div className={classes.demo}>\n                        {notes.length === 0 ? <div>No notes.</div> : null}\n                        <List dense={false}>\n                            {notes.map(note => (\n                                <ListItem key={note.id}>\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <FolderIcon/>\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={note.note}\n                                        secondary={secondary ? 'Secondary text' : null}\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <IconButton edge=\"end\" onClick={handleDeleteBtn}>\n                                            <DeleteIcon/>\n                                        </IconButton>\n                                        <IconButton edge=\"end\" onClick={() => handleEditBtn(note)}>\n                                            <EditIcon/>\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            ))}\n                        </List>\n                    </div>\n                </Grid>\n\n                <Grid item xs={6} md={4}>\n                    <Typography variant=\"h6\" className={classes.title} align=\"left\">\n                        Categories\n                    </Typography>\n\n                    <div className={classes.rootForFilters}>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Choose one</FormLabel>\n                            <RadioGroup name=\"category\" value={categoryValue} onChange={handleChange}>\n                                <FormControlLabel value=\"\" control={<Radio/>} label=\"All\"/>\n                                {categories.map(category => (\n                                    <FormControlLabel\n                                        key={category.id}\n                                        value={category.id}\n                                        control={<Radio/>}\n                                        label={category.name}/>\n                                ))}\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                </Grid>\n            </Grid>\n\n            <Box mt={6}>\n                <Button variant=\"contained\" style={ { marginRight: '10px'}}>\n                    Previous Page\n                </Button>\n                <Button variant=\"contained\"\n                        color=\"primary\">\n                    Next Page\n                </Button>\n\n            </Box>\n\n            <Dialog\n                open={deleteOpen}\n                onClose={handleDeleteClose}\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Are you sure want to delete?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        This note will be deleted permanently. You sure want to delete it?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDeleteClose} color=\"secondary\">\n                        Delete\n                    </Button>\n                    <Button onClick={handleDeleteClose} color=\"primary\" autoFocus>\n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <EditNoteModal\n                note={editNote}\n                open={editOpen}\n                handleClose={handleEditClose}\n                handleSave={handleEditSave}\n                categories={categories}\n            />\n        </Container>\n    );\n}\n\nexport default Dashboard;\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport { useAuth } from './use-auth'\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute ({ children, ...rest }) {\n  let auth = useAuth()\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from \"@material-ui/core/Container\";\nimport {AppBar} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n    title: {\n        flexGrow: 1,\n    },\n});\n\nfunction createData(username, email, admin, action) {\n    return {username, email, admin, action};\n}\n\nconst rows = [\n    createData('Anna', 'anna@gmail.com', 'yes', 'change password'),\n    createData('Andrei', 'andrei@gmail.com', 'no', 'change password'),\n    createData('Artem', 'artem@gmail.com', 'no', 'change password'),\n];\n\nexport default function AdminPage() {\n    const classes = useStyles();\n    const [changePassOpen, setChangePassOpen] = React.useState(false);\n    const [changeDeactivateOpen, setDeactivateOpen] = React.useState(false);\n    const handleChangePassBtn = () => setChangePassOpen(true);\n    const handleChangePassClose = () => setChangePassOpen(false);\n    const handleDeactivateBtn = () => setDeactivateOpen(true);\n    const handleDeactivateClose = () => setDeactivateOpen(false);\n\n    return (\n        <Container fixed>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Dashboard\n                    </Typography>\n                    <Button color=\"inherit\" component={Link} to={'/'}>\n                        Logout\n                    </Button>\n                    <Button color=\"inherit\" component={Link} to={'/dashboard'}>\n                        Dashboard\n                    </Button>\n                </Toolbar>\n            </AppBar>\n\n\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>USERNAME</TableCell>\n                            <TableCell align=\"left\">EMAIL</TableCell>\n                            <TableCell align=\"left\">ADMIN</TableCell>\n                            <TableCell align=\"left\">ACTION</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row) => (\n                            <TableRow key={row.username}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.username}\n                                </TableCell>\n                                <TableCell align=\"left\">{row.email}</TableCell>\n                                <TableCell align=\"left\">{row.admin}</TableCell>\n                                <TableCell align=\"left\">\n                                    <Button variant=\"outlined\"  onClick={handleChangePassBtn} color=\"primary\" style={{marginRight: '10px'}}>\n                                        Change password\n                                    </Button>\n                                    <Button variant=\"outlined\" onClick={handleDeactivateBtn}>\n                                        Deactivate user\n                                    </Button>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n\n            <Dialog\n                open={changePassOpen}\n                onClose={handleChangePassClose}\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to change the password?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        The password will be changed permanently\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleChangePassClose} color=\"secondary\">\n                        Change\n                    </Button>\n                    <Button onClick={handleChangePassClose} color=\"primary\" autoFocus>\n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={changeDeactivateOpen}\n                onClose={handleDeactivateClose}\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to deactivate that user?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        That user will no longer be active\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDeactivateClose} color=\"secondary\">\n                        Deactivate\n                    </Button>\n                    <Button onClick={handleDeactivateClose} color=\"primary\" autoFocus>\n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Container>\n\n    );\n}\n","import './App.css'\nimport SignIn from './components/SignIn'\nimport React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport SignUp from './components/SignUp'\nimport NotFound from './components/NotFound'\nimport Dashboard from './components/Dashboard'\nimport PrivateRoute from './components/PrivateRoute'\nimport AdminPage from './components/AdminPage'\nimport { ProvideAuth } from './components/use-auth'\n\nfunction App () {\n  return (\n    <ProvideAuth>\n      <div className=\"App\">\n        <Switch>\n\n          <Route path=\"/\" component={SignIn} exact/>\n          <Route path=\"/login\" component={SignIn} exact/>\n          <Route path=\"/signup\" component={SignUp}/>\n\n          <PrivateRoute path=\"/dashboard\">\n            <Dashboard/>\n          </PrivateRoute>\n          <PrivateRoute path=\"/admin\">\n            <AdminPage/>\n          </PrivateRoute>\n\n          <Route component={NotFound}/>\n        </Switch>\n      </div>\n    </ProvideAuth>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}